// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "value", Type: field.TypeString, Unique: true},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "run", Type: field.TypeInt, Unique: true},
		{Name: "verification_digit", Type: field.TypeString},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"UNKNOWN", "MALE", "FEMALE"}, Default: "UNKNOWN"},
		{Name: "marital_status", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "home_address", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "birth_date", Type: field.TypeTime, Nullable: true},
		{Name: "expiration_date", Type: field.TypeTime, Nullable: true},
		{Name: "plant_type", Type: field.TypeString, Nullable: true},
		{Name: "emergency_name", Type: field.TypeString, Nullable: true},
		{Name: "emergency_number", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "expose", Type: field.TypeBool, Default: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_run",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
		},
	}
	// UserQueuesColumns holds the columns for the "user_queues" table.
	UserQueuesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "run", Type: field.TypeInt, Unique: true},
		{Name: "verification_digit", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "fetch_status", Type: field.TypeEnum, Enums: []string{"WAITING", "PENDING", "ERROR", "COMPLETED"}, Default: "WAITING"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"EMPTY", "NOT_FOUND", "FOUND"}, Default: "EMPTY"},
	}
	// UserQueuesTable holds the schema information for the "user_queues" table.
	UserQueuesTable = &schema.Table{
		Name:       "user_queues",
		Columns:    UserQueuesColumns,
		PrimaryKey: []*schema.Column{UserQueuesColumns[0]},
	}
	// LocationUsersColumns holds the columns for the "location_users" table.
	LocationUsersColumns = []*schema.Column{
		{Name: "location_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// LocationUsersTable holds the schema information for the "location_users" table.
	LocationUsersTable = &schema.Table{
		Name:       "location_users",
		Columns:    LocationUsersColumns,
		PrimaryKey: []*schema.Column{LocationUsersColumns[0], LocationUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "location_users_location_id",
				Columns:    []*schema.Column{LocationUsersColumns[0]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "location_users_user_id",
				Columns:    []*schema.Column{LocationUsersColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LocationsTable,
		UsersTable,
		UserQueuesTable,
		LocationUsersTable,
	}
)

func init() {
	LocationUsersTable.ForeignKeys[0].RefTable = LocationsTable
	LocationUsersTable.ForeignKeys[1].RefTable = UsersTable
}
